services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: entropic-postgres
    environment:
      POSTGRES_DB: entropic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - entropic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d entropic"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
  typesense:
    image: typesense/typesense:28.0
    container_name: entropic-typesense
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: xyz
      TYPESENSE_ENABLE_CORS: true
    ports:
      - "8108:8108"
    volumes:
      - typesense_data:/data
    networks:
      - entropic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
  redis:
    image: redis:7-alpine
    container_name: entropic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - entropic-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    command: redis-server --appendonly yes
  entropic:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        COMMIT: ${COMMIT:-unknown}
        BUILD_TIME: ${BUILD_TIME:-unknown}
    container_name: entropic-server
    environment:
      ENTROPIC_SERVER_HOST: 0.0.0.0
      ENTROPIC_SERVER_PORT: 8080
      ENTROPIC_DATABASE_HOST: postgres
      ENTROPIC_DATABASE_PORT: 5432
      ENTROPIC_DATABASE_DATABASE: entropic
      ENTROPIC_DATABASE_USERNAME: postgres
      ENTROPIC_DATABASE_PASSWORD: postgres
      ENTROPIC_DATABASE_SSL_MODE: disable
      ENTROPIC_DATABASE_MIGRATE_ON_START: true
      ENTROPIC_SEARCH_URL: http://typesense:8108
      ENTROPIC_SEARCH_API_KEY: xyz
      ENTROPIC_LOCK_TYPE: memory
      ENTROPIC_LOCK_REDIS_HOST: redis
      ENTROPIC_LOCK_REDIS_PORT: 6379
      ENTROPIC_LOGGING_LEVEL: info
      ENTROPIC_LOGGING_FORMAT: json
    ports:
      - "8080:8080"
    volumes:
      - ./entropic.yaml:/app/entropic.yaml:ro
      - entropic_logs:/app/logs
    networks:
      - entropic-network
    depends_on:
      postgres:
        condition: service_healthy
      typesense:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "./entropic-server", "version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
  nginx:
    image: nginx:alpine
    container_name: entropic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - entropic-network
    depends_on:
      - entropic
    restart: unless-stopped
    profiles:
      - proxy
volumes:
  postgres_data:
    driver: local
  typesense_data:
    driver: local
  redis_data:
    driver: local
  entropic_logs:
    driver: local
  nginx_logs:
    driver: local
networks:
  entropic-network:
    driver: bridge
