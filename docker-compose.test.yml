# Docker Compose configuration for testing
version: '3.8'

services:
  # Test PostgreSQL database
  postgres-test:
    image: pgvector/pgvector:pg17
    container_name: entropic-postgres-test
    environment:
      POSTGRES_DB: entropic_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - entropic-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d entropic_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    tmpfs:
      - /var/lib/postgresql/data

  # Test Typesense instance
  typesense-test:
    image: typesense/typesense:28.0
    container_name: entropic-typesense-test
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: test-key
      TYPESENSE_ENABLE_CORS: true
    ports:
      - "8109:8108"
    networks:
      - entropic-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    tmpfs:
      - /data

  # Test Redis instance
  redis-test:
    image: redis:7-alpine
    container_name: entropic-redis-test
    ports:
      - "6380:6379"
    networks:
      - entropic-test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    tmpfs:
      - /data

  # Test runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: entropic-test-runner
    environment:
      # Test database configuration
      ENTROPIC_DATABASE_HOST: postgres-test
      ENTROPIC_DATABASE_PORT: 5432
      ENTROPIC_DATABASE_DATABASE: entropic_test
      ENTROPIC_DATABASE_USERNAME: postgres
      ENTROPIC_DATABASE_PASSWORD: postgres
      ENTROPIC_DATABASE_SSL_MODE: disable
      
      # Test search configuration
      ENTROPIC_SEARCH_URL: http://typesense-test:8108
      ENTROPIC_SEARCH_API_KEY: test-key
      
      # Test lock configuration
      ENTROPIC_LOCK_TYPE: redis
      ENTROPIC_LOCK_REDIS_HOST: redis-test
      ENTROPIC_LOCK_REDIS_PORT: 6379
      
      # Test logging
      ENTROPIC_LOGGING_LEVEL: debug
      ENTROPIC_LOGGING_FORMAT: console
      
      # Test environment
      GO_ENV: test
    volumes:
      - .:/app
      - go_cache:/go/pkg/mod
      - test_coverage:/app/coverage
    working_dir: /app
    networks:
      - entropic-test-network
    depends_on:
      postgres-test:
        condition: service_healthy
      typesense-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    profiles:
      - test

  # Integration test runner
  integration-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: entropic-integration-test
    environment:
      # Test configuration
      ENTROPIC_DATABASE_HOST: postgres-test
      ENTROPIC_DATABASE_PORT: 5432
      ENTROPIC_DATABASE_DATABASE: entropic_test
      ENTROPIC_DATABASE_USERNAME: postgres
      ENTROPIC_DATABASE_PASSWORD: postgres
      ENTROPIC_DATABASE_SSL_MODE: disable
      ENTROPIC_SEARCH_URL: http://typesense-test:8108
      ENTROPIC_SEARCH_API_KEY: test-key
      ENTROPIC_LOCK_TYPE: memory
      ENTROPIC_LOGGING_LEVEL: warn
      GO_ENV: integration_test
    volumes:
      - .:/app
      - go_cache:/go/pkg/mod
    working_dir: /app
    networks:
      - entropic-test-network
    depends_on:
      postgres-test:
        condition: service_healthy
      typesense-test:
        condition: service_healthy
    command: ["go", "test", "-tags=integration", "./tests/integration/...", "-v"]
    profiles:
      - integration

# Volumes for test caching
volumes:
  go_cache:
    driver: local
  test_coverage:
    driver: local

# Test network
networks:
  entropic-test-network:
    driver: bridge